name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8']
        django-version: ['Django>=3.0,<3.1', 'Django>=2.2,<2.3']
        run-web-tests: [true, false]
        use-custom-model: [true, false]
        exclude:
          - python-version: '3.8'
            django-version: 'Django>=3.0,<3.1'
            run-web-tests: false
            use-custom-model: true
          - python-version: '3.8'
            django-version: 'Django>=3.0,<3.1'
            run-web-tests: false
            use-custom-model: false
          - python-version: '3.8'
            django-version: 'Django>=3.0,<3.1'
            run-web-tests: true
            use-custom-model: true
          - python-version: '3.8'
            django-version: 'Django>=3.0,<3.1'
            run-web-tests: true
            use-custom-model: false
          - python-version: '3.8'
            django-version: 'Django>=3.0,<3.1'
            run-web-tests: true
            use-custom-model: true
          - python-version: '3.8'
            django-version: 'Django>=3.0,<3.1'
            run-web-tests: true
            use-custom-model: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install codecov
          grep -v "^django==" requirements.txt > /tmp/reqs.txt
          pip install -r /tmp/reqs.txt
          pip install "${{ matrix.django-version }}" -U

      - name: Make test script executable
        run: chmod +x ./scripts/ci_runtests.sh

      - name: Run tests
        env:
          DJANGO_VERSION: ${{ matrix.django-version }}
          RUN_WEB_TESTS: ${{ matrix.run-web-tests }}
          USE_CUSTOM_MODEL: ${{ matrix.use-custom-model }}
        run: ./scripts/ci_runtests.sh

      - name: Upload coverage to Codecov
        if: success()
        run: codecov

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel

      - name: Build and publish to PyPI
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/* -u $PYPI_USERNAME -p $PYPI_PASSWORD
